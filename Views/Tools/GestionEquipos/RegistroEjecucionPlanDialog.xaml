<!-- filepath: e:\Softwares\GestLog\Views\Tools\GestionEquipos\RegistroEjecucionPlanDialog.xaml -->
<Window x:Class="GestLog.Views.Tools.GestionEquipos.RegistroEjecucionPlanDialog"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:conv="clr-namespace:GestLog.Converters"
        xmlns:local="clr-namespace:GestLog.Converters"
        mc:Ignorable="d"
        Title="Registrar Ejecución de Plan" Height="640" Width="920" WindowStartupLocation="CenterOwner" Background="#F6F7F9" ResizeMode="CanResize">

    <Window.Resources>
        <!-- Paleta y estilos coherentes con DetallesEquipoInformaticoView -->
        <SolidColorBrush x:Key="PrimaryBrush" Color="#118938"/>
        <SolidColorBrush x:Key="AccentBrush" Color="#0F7530"/>
        <SolidColorBrush x:Key="CardBackground" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="PageBackground" Color="#F6F7F9"/>

        <Style x:Key="LabelStyle" TargetType="TextBlock">
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Foreground" Value="#2B8E3F"/>
            <Setter Property="FontSize" Value="12"/>
        </Style>

        <Style x:Key="CardStyle" TargetType="Border">
            <Setter Property="Background" Value="{StaticResource CardBackground}"/>
            <Setter Property="CornerRadius" Value="8"/>
            <Setter Property="Padding" Value="12"/>
            <Setter Property="BorderBrush" Value="#E6E9EC"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Margin" Value="0"/>
        </Style>

        <Style x:Key="PrimaryButtonStyle" TargetType="Button">
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Background" Value="#2B8E3F" />
            <Setter Property="Padding" Value="10,6" />
            <Setter Property="Height" Value="36" />
            <Setter Property="FontWeight" Value="SemiBold" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="MinWidth" Value="120"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="Bd" Background="{TemplateBinding Background}" CornerRadius="6" SnapsToDevicePixels="True">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Bd" Property="Background" Value="#247C35" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="Bd" Property="RenderTransform">
                                    <Setter.Value>
                                        <TranslateTransform Y="1" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.5" />
                                <Setter Property="Cursor" Value="Arrow" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="GhostButton" TargetType="Button">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="#607D8B" />
            <Setter Property="BorderBrush" Value="#E0E6EB" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Padding" Value="10,6" />
            <Setter Property="Height" Value="36" />
            <Setter Property="MinWidth" Value="120" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="6" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#FAFBFC"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Plantilla de item del checklist, más aire y separación -->
        <DataTemplate x:Key="ChecklistItemTemplate">
            <!-- Altura mínima uniforme para que los TextBox de observación se alineen entre filas -->
            <Border Background="Transparent" Padding="8" Margin="0,4,0,4" MinHeight="44">
                <Grid VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="36"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="320"/>
                    </Grid.ColumnDefinitions>

                    <!-- Centrar verticalmente para que el TextBox se alinee al centro del bloque de descripción -->
                    <CheckBox IsChecked="{Binding Completado, Mode=TwoWay}" VerticalAlignment="Center" Margin="4"/>

                    <StackPanel Grid.Column="1" Orientation="Vertical" Margin="8,0">
                        <!-- Mostrar placeholder si falta descripción para que el item no parezca 'invisible' -->
                        <TextBlock Text="{Binding Descripcion, TargetNullValue=(sin descripción), FallbackValue=(sin descripción)}" TextWrapping="Wrap" VerticalAlignment="Top" TextTrimming="CharacterEllipsis"/>
                        <!-- Debug: mostrar Id en texto pequeño para localizar items invisibles -->
                        <TextBlock Text="{Binding Id, StringFormat=Id: {0}}" Foreground="#888" FontSize="11" Margin="0,4,0,0" VerticalAlignment="Center"/>
                    </StackPanel>

                    <!-- Observación centrada verticalmente para mantener alineación uniforme -->
                    <TextBox Text="{Binding Observacion, UpdateSourceTrigger=PropertyChanged}" Grid.Column="2" Margin="8,0" VerticalAlignment="Center" MinHeight="26" VerticalContentAlignment="Center" MinWidth="240" ToolTip="Observación"/>
                </Grid>
            </Border>
        </DataTemplate>

        <conv:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

    </Window.Resources>

    <Grid Margin="18">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <!-- Header -->
        <Border Grid.Row="0" Style="{StaticResource CardStyle}" Margin="0,0,0,12">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Vertical">
                    <TextBlock Text="Registro de ejecución" FontSize="20" FontWeight="Bold" Foreground="{StaticResource PrimaryBrush}"/>
                    <TextBlock Text="Registre la ejecución semanal del plan y deje observaciones si aplica." Foreground="#666" Margin="0,6,0,0"/>
                </StackPanel>

                <StackPanel Orientation="Horizontal" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Right">
                    <TextBlock Text="Semana:" VerticalAlignment="Center" Margin="0,0,8,0" Style="{StaticResource LabelStyle}"/>
                    <TextBlock Text="{Binding SemanaISO}" FontWeight="Bold" VerticalAlignment="Center" Margin="0,0,16,0"/>

                    <TextBlock Text="Equipo:" VerticalAlignment="Center" Margin="0,0,8,0" Style="{StaticResource LabelStyle}"/>
                    <TextBlock Text="{Binding CodigoEquipo}" FontWeight="Bold" VerticalAlignment="Center"/>
                </StackPanel>
            </Grid>
        </Border>

        <!-- Contenido principal: dos columnas -->
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>

            <!-- Lista checklist (columna principal) -->
            <Border Grid.Column="0" Style="{StaticResource CardStyle}" Margin="0,0,12,0">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <!-- Header del checklist -->
                    <Grid Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="Checklist" Style="{StaticResource LabelStyle}" FontSize="14" Grid.Column="0" VerticalAlignment="Center"/>
                        <TextBlock Text="{Binding FechaObjetivo, StringFormat='Fecha objetivo: {0:dd/MM/yyyy}'}" Foreground="#666" VerticalAlignment="Center" Grid.Column="1" Margin="12,0,0,0"/>
                    </Grid>

                    <Separator Grid.Row="1" Margin="8,8,0,8"/>

                    <!-- ListView con scroll; la tercera fila (*) permite que ocupe el espacio disponible y muestre scroll -->
                    <ListView Grid.Row="2" x:Name="ChecklistListView" ItemsSource="{Binding Checklist}" Margin="0" HorizontalContentAlignment="Stretch" VerticalAlignment="Stretch"
                              ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Auto">
                        <ListView.View>
                            <GridView>
                                <!-- Columna principal: Id + Descripción. Width fijo para dejar más espacio a Observación -->
                                <GridViewColumn Header="Ítem" Width="340">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal" MinHeight="30" VerticalAlignment="Center">
                                                <CheckBox IsChecked="{Binding Completado, Mode=TwoWay}" VerticalAlignment="Center" Margin="4"/>
                                                <TextBlock Text="{Binding Descripcion}" TextTrimming="CharacterEllipsis" VerticalAlignment="Center" Margin="8,0,4,0" />
                                                <!-- pequeño debug id si existía en la plantilla original -->
                                                <TextBlock Text="{Binding Id, StringFormat='Id: {0}'}" Foreground="Transparent" Visibility="Collapsed" />
                                            </StackPanel>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                                <!-- Columna Observación: más ancha y TextBox más largo, menos alto -->
                                <GridViewColumn Header="Observación" Width="460">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox Text="{Binding Observacion, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                     AcceptsReturn="True"
                                                     TextWrapping="Wrap"
                                                     VerticalAlignment="Center"
                                                     HorizontalAlignment="Stretch"
                                                     MinHeight="26"
                                                     MinWidth="300"
                                                     Padding="4"
                                                     />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                            </GridView>
                        </ListView.View>
                    </ListView>

                </Grid>
            </Border>

            <!-- Tarjeta lateral con meta datos y resumen -->
            <Border Grid.Column="1" Style="{StaticResource CardStyle}">
                <StackPanel>
                    <TextBlock Text="Información" Style="{StaticResource LabelStyle}"/>
                    <Grid Margin="0,8,0,12">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <TextBlock Text="Plan:" Grid.Row="0" Grid.Column="0" VerticalAlignment="Center"/>
                        <TextBox Grid.Row="0" Grid.Column="1" IsReadOnly="True" BorderThickness="0" Background="Transparent">
                            <TextBox.Text>
                                <MultiBinding StringFormat="{}{0} - {1}">
                                    <Binding Path="CodigoEquipo" TargetNullValue="No especificado" FallbackValue="No especificado"/>
                                    <Binding Path="ResponsablePlan" TargetNullValue="No especificado" FallbackValue="No especificado"/>
                                </MultiBinding>
                            </TextBox.Text>
                        </TextBox>

                        <TextBlock Text="Responsable:" Grid.Row="1" Grid.Column="0" VerticalAlignment="Center" Margin="0,8,0,0"/>
                        <TextBox Text="{Binding ResponsablePlan, UpdateSourceTrigger=PropertyChanged}" Grid.Row="1" Grid.Column="1" Margin="0,8,0,0"/>

                        <TextBlock Text="Usuario actual:" Grid.Row="2" Grid.Column="0" VerticalAlignment="Center" Margin="0,8,0,0"/>
                        <TextBox Text="{Binding ResponsablePlan}" Grid.Row="2" Grid.Column="1" Margin="0,8,0,0" IsReadOnly="True" BorderThickness="0" Background="Transparent"/>
                    </Grid>

                    <Separator/>

                    <!-- Contador dinámico de items completados -->
                    <TextBlock Margin="0,8,0,4" VerticalAlignment="Center" FontWeight="Bold" Foreground="{StaticResource PrimaryBrush}">
                        <TextBlock.Text>
                            <MultiBinding StringFormat="Items completados: {0}/{1}">
                                <Binding Path="CompletedItems"/>
                                <Binding Path="TotalItems"/>
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>

                    <!-- Resumen en vivo: porcentaje y observaciones -->
                    <ProgressBar Height="10" Minimum="0" Maximum="100" Value="{Binding PercentComplete}" Margin="0,6,0,8" />
                    <TextBlock Text="{Binding PercentComplete, StringFormat={}{0}%}" Foreground="#666" FontSize="12" HorizontalAlignment="Right" Margin="0,0,0,6" />
                    <TextBlock Text="{Binding ResumenEnVivo}" TextWrapping="Wrap" Foreground="#444" Margin="0,4,0,8"/>

                    <TextBlock Text="Resumen de ejecución" Style="{StaticResource LabelStyle}" Margin="0,8,0,6"/>
                    <TextBlock TextWrapping="Wrap" Foreground="#444">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Setter Property="Text" Value="{Binding StatusMessage}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding StatusMessage}" Value="">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding StatusMessage}" Value="{x:Null}">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <!-- Acciones centralizadas en el pie de la ventana para evitar duplicados -->
                    <!-- Botones Guardar/Cerrar provistos en el footer global -->

                </StackPanel>
            </Border>
        </Grid>

        <!-- Footer fijo con mensaje y acciones rápidas -->
        <Border Grid.Row="2" Background="Transparent" Margin="0,12,0,0">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <TextBlock Text="{Binding StatusMessage}" VerticalAlignment="Center" Foreground="#D32F2F" FontWeight="Bold">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding StatusMessage}" Value="">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding StatusMessage}" Value="{x:Null}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>

                <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">
                    <Button Content="Guardar" Command="{Binding GuardarCommand}" Style="{StaticResource PrimaryButtonStyle}" Margin="0,0,8,0"/>
                    <Button Content="Cerrar" IsCancel="True" Click="Cerrar_Click" Style="{StaticResource GhostButton}"/>
                </StackPanel>
            </Grid>
        </Border>

    </Grid>
</Window>
